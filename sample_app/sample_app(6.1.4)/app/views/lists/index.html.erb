<!--投稿一覧-->
<div class="list-wrap">
<% @lists.each do |list| %>
  <div class="list-box">
    <% if list.image.attached? %>
      <%= image_tag list.image, size: "200x200" %>
    <% else %>
      <%= image_tag 'no_image', size: "200x200" %>
    <% end %>
    <div class="list-comment">
      <span class="list-body"><%= list.body %></span>
      <span class="list-title"><%=link_to list.title, list_path(list.id) %></span>
    </div>
  </div>
<% end %>
</div>

<!--!マークはコメントアウトなので無視する)-->

<!--表題15-->
<!--一覧画面を表示しよう2-->
<!--ファイルを開き以下のように記述します。元の記述は削除します-->
<!-- <h1>投稿一覧</h1>-->

<!-- <!%= @lists.each do |list| %>-->

<!--  <p>タイトル</p>-->
<!--  <span><!%= list.title %></span>-->

<!-- <!% end %>-->
<!--h1はタイトルです。-->

<!--eachメソッドを記述していきます-->
<!--<!%で始まるタグは、Rubyで使われるタグです。-->
<!--<!% %>では、タグ内の結果がHTMLに変換されずに処理されます。-->
<!--<!%= %>では、タグ内の結果がHTMLに変換されます-->
<!--@listsの中身は、先ほどコントローラで代入したList.allがそのまま入っています。-->
<!--eachメソッドを使い配列やハッシュがもつ要素を順番に取得して処理を実行します。-->
<!--@lists.eachと記述することで、Listレコードの数だけ繰り返し処理を行います。-->
<!--各レコードの内容は、|list|のlistという変数に格納されます。-->
<!--「each」メソッドの型は以下のようなものがあります。-->
<!--オブジェクト.each{|変数|-->
<!--  実行する処理1-->
<!--  実行する処理2-->
<!--}-->
<!--又は次のように記述することも出来ます。-->
<!--オブジェクト.each do |変数|-->
<!--  実行する処理1-->
<!--  実行する処理2-->
<!--end-->
<!--オブジェクトに含まれる要素を「succ」メソッド(続きを意味するメソッド)で-->
<!--順に取得して変数に格納し、-->
<!--「{」から「}」までの処理(又は「do」から「end」までの処理)を実行します。-->
<!--オブジェクトに含まれる要素が無くなるまで繰り返し行われます。-->

<!--作成したeachメソッド内にpタイトルを作成します-->
<!--その後spanタグを用いてlist.[カラム名]と記述することで、-->
<!--レコードのカラムの内容を表示できます。-->
<!--ここでは、list.titleと記述することで、投稿のタイトルが表示されます。-->
<!--すべてのコードを記述した後はconfig/routes.rbに移動します。-->

<!--表題17-->
<!--一覧画面を表示しよう4-->
<!--先ほど書いたものから@lists.eachの前の=を削除します-->
<!--<!%= @lists.each do |list| %>-->
<!--↓-->
<!--<!% @lists.each do |list| %>-->
<!--each文には=は不要です。=を付けるのは、実際にHTMLとして表示したいものです。-->
<!--表示したいものは「タイトル」という文字や「list.title」等だけですので-->
<!--each文に=を付ける必要はありません。 -->
<!--=を付けたときに出てきた見慣れない表示は、@listsそのものです-->
<!--再度サーバーを起動し正常か確認します。-->
<!--確認後はconfig/routes.rbに移動します-->

<!--表題21-->
<!--詳細画面を作ろう4-->
<!--一覧画面から詳細画面へ遷移するリンクを設定します。-->
<!--リンクを設定するには、link_toメソッドを利用します-->
<!--  <!%= link_to 表示させるテキスト , リンク先URL [,オプション] %>-->
<!--今回の場合URLを /lists/:idの「:idに該当する部分」を指定します。-->
<!--オプションは設定しません-->
<!--  <span><!%= list.title %></span>-->
<!--   ↓-->
<!--  <span>!%= link_to list.title, "/lists/#{list.id}" %></span>-->
                <!--↑リンク遷移のためのlink_toとlist.[カラム名]のlist.title-->
<!--いったんサーバーを起動して、一覧画面の/listsへアクセスします。-->
<!--デベロッパーツールを使って、link_toがHTML上でaタグに変化していることを確認する-->
<!--確認後はルーティングを名前付きルートにするためにconfig/routes.rbへ移動します-->

<!--表題23-->
<!--詳細画面を作ろう6-->
<!--ルーティングを名前付きルートに変更します-->
<!--忘れずに引数の(list.id)を記述してください。-->
<!--<!%= link_to list.title, "/lists/#{list.id}" %>-->
<!--↓-->
<!--<!%= link_to list.title, list_path(list.id) %>-->
<!--これによりviewとルーティング(routes)にパスができたので-->
<!--URLの表記を変更した場合ルーティングのみを変更すれば自動的にパスによって-->
<!--viewも変更されます-->
<!--投稿後のアクションを変更するためにapp/controllers/lists_controller.rbに移動する-->

<!--表題35-->
<!--画像投稿機能を作ろう4-->
<!--HTMLのimgタグを生成するimage_tagヘルパーを使い、画像の表示を行います。-->
<!-- <p>画像</p>-->
<!--  <!%= image_tag list.image, size: "200x200" %>-->
<!--  listに紐ついているimageをimage_tagに渡すことで画像を表示することができます。-->
<!--一覧画面の画像が表示できているかを確認するために-->
<!--サーバーを起動して/listsを開くとエラーになります-->
<!--これは、imageが保存されていないために起きているエラーです。-->
<!--エラーの回避の方法は以下のようになります。-->
<!--imageがあればimageを表示する-->
<!--imageがなければあらかじめ用意しておいた画像を表示する。-->
<!--今回はあらかじめ用意しておいた画像を表示する-->
<!--画像ファイルをapp/assets/imagesに入れる-->
<!--先ほど入力したコードを削除します-->
<!--以前学んだif式を使います。以下のコードは<!% %>が付いているためややこしいですが、-->
<!--普通のif式と同じように動作します-->
<!-- <p>画像</p>-->
<!--  <!% if list.image.attached? %>-->
<!--    <!%= image_tag list.image, size: "200x200" %>-->
<!--  <!% else %>-->
<!--    <!%= image_tag 'no_image', size: "200x200" %>-->
<!--  <!% end %>-->
<!--list.image.attached?とはlist.imageに対して-->
<!--.attached?というimageが存在するかを確認するメソッドです。-->
<!--.attached?は、画像が存在していればtrue、存在していなければfalseを返します。-->
<!--今回の場合では、imageが存在していれば、list.imageを表示し、-->
<!--なければ用意したno_imageを表示するといった記述です-->
<!--サーバーを起動し/listsにアクセスします-->
<!--画像という文字の下に先ほど入れた画像ファイルが表示されているか確認する-->
<!--app/views/lists/show.html.erbに移動します-->

<!--表題50-->
<!--レイアウトを整えよう1-->
<!--index.html.erbファイルのコードを整える。-->
<!--application.html.erbファイルとapplication.cssファイルを編集して、独自のCSSをRailsアプリケーションに反映させる。-->
<!--今回は①index.html.erb②application.html.erb③application.cssの３つのファイルを編集します。-->
<!--application.html.erbはすべてのビューに反映されるHTMLファイルになります。-->
<!--そのため、全ビュー共通の「ヘッダー・フッター」を記述するのに適しています。-->
<!--今回は②にヘッダーを記述し、またHTMLファイルのheadタグもここにあるのでフォントを変えるstylesheetを読み込む記述もします-->
<!--pplication.cssはすべてのビューに反映されるCSSファイルになり、app/assets/stylesheets 以下にあります。-->
<!--このファイルにCSSの記述をすることで、オリジナルのCSSをアプリケーションに反映させることができます。-->
<!--まずはndex.html.erbを編集します。-->
<!--現在のコードのすべて削除して書き換えます-->
<!--<h1>投稿一覧</h1>-->
<!--<!% @lists.each do |list| %>-->
<!--  <p>タイトル</p>-->
<!--  <span>-->
<!--    <!%=link_to list.title, list_path(list.id) %>-->
<!--  </span>-->
<!--  <p>画像</p>-->
<!--    <!% if list.image.attached? %>-->
<!--      <!%= image_tag list.image, size: "200x200" %>-->
<!--    <!% else %>-->
<!--      <!%= image_tag 'no_image', size: "200x200" %>-->
<!--    <!% end %>-->
<!--<!% end %>-->
<!--↓-->
<!--<div class="list-wrap">-->
<!--<!% @lists.each do |list| %>-->
<!--  <div class="list-box">-->
<!--    <!% if list.image.attached? %>-->
<!--      <!%= image_tag list.image, size: "200x200" %>-->
<!--    <!% else %>-->
<!--      <!%= image_tag 'no_image', size: "200x200" %>-->
<!--    <!% end %>-->
<!--    <div class="list-comment">-->
<!--      <span class="list-body"><!%= list.body %></span>-->
<!--      <span class="list-title"><!%=link_to list.title, list_path(list.id) %></span>-->
<!--    </div>-->
<!--  </div>-->
<!--<!% end %>-->
<!--</div>-->
<!--書き換えたコードの中にある<!%= list.body %>はListモデルのbodyカラムに入っているデータを呼び出している記述です。-->
<!--app/views/layouts/application.html.erbへ移動する-->